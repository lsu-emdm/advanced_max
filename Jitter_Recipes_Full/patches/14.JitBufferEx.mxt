max v2;#N vpatcher 50 44 896 486;#P window setfont "Sans Serif" 9.;#P window linecount 4;#P comment 589 358 224 196617 ...and don't forget all the fun downsampling/upsampling \, repos-ing \, plur-ing \, key-ing \, etc. that you can do with Jitter. Have fun mangling your buffers!;#P window linecount 1;#P hidden newex 286 392 106 196617 bgcolor 160 160 100;#P window setfont "Sans Serif" 12.;#P window linecount 3;#P comment 664 64 98 196620 Not your grandfather's buffer~...;#P window setfont "Sans Serif" 9.;#P window linecount 1;#N vpatcher 378 215 798 494;#P window setfont "Sans Serif" 9.;#P window linecount 1;#P comment 47 136 91 196617 hamming window;#P comment 47 170 91 196617 blackman window;#P message 46 150 233 196617 exprfill "0.54 - 0.46*cos(2*PI*norm[0])" \, bang;#P comment 6 30 34 196617 sine;#P comment 19 63 34 196617 ramp;#P window linecount 0;#P message 47 185 341 196617 exprfill "0.42-0.5*cos(2*PI*norm[0])+0.08*cos(4*PI*norm[0])" \, bang;#P window linecount 1;#P message 34 117 215 196617 exprfill "0.5-0.5*cos(2*PI*norm[0])" \, bang;#P outlet 6 231 15 0;#P message 19 77 121 196617 exprfill "norm[0]" \, bang;#P message 6 45 171 196617 exprfill "sin(norm[0]*PI*2)" \, bang;#P window linecount 0;#P comment 34 102 78 196617 hanning window;#P connect 2 0 3 0;#P connect 1 0 3 0;#P connect 4 0 3 0;#P connect 8 0 3 0;#P connect 5 0 3 0;#P pop;#P newobj 660 141 70 196617 p use exprfill;#P window linecount 6;#P comment 432 229 143 196617 This half uses jit.fill to load a buffer with sample values. This could be used to quickly and easily generate windowing buffers \, especially using the jit.matrix "exprfill" function;#P number 83 71 52 9 1001 0 1 3 0 0 0 221 221 221 222 222 222 0 0 0;#P window linecount 1;#P comment 81 265 143 196617 set the length of the crossfade;#P flonum 578 224 35 9 0 0 0 3 0 0 0 221 221 221 222 222 222 0 0 0;#P newex 578 242 46 196617 phasor~;#P user gain~ 579 283 70 49 158 0 1.071519 7.94321 10.;#P newex 578 262 112 196617 wave~ shaped 0 11.61;#P newex 433 207 121 196617 jit.buffer~ shaped 11.61;#P newex 433 184 158 196617 jit.matrix shape 1 float32 512 1;#P newex 433 160 74 196617 jit.fill shape 0;#P user multiSlider 433 36 226 121 -1. 1. 512 2681 47 0 0 2 0 0 0;#M frgb 38 144 59;#M brgb 236 232 211;#M rgb2 127 127 127;#M rgb3 181 181 181;#M rgb4 37 52 91;#M rgb5 74 105 182;#M rgb6 112 158 18;#M rgb7 149 211 110;#M rgb8 187 9 201;#M rgb9 224 62 37;#M rgb10 7 114 128;#P user jit.pwindow 30 322 129 35 0 1 0 0 1 0;#P flonum 45 262 35 9 0 0 0 3 0 0 0 221 221 221 222 222 222 0 0 0;#P message 45 281 131 196617 slide_up \$1 \, slide_down \$1;#P flonum 239 197 35 9 0 0 0 3 0 0 0 221 221 221 222 222 222 0 0 0;#P message 277 117 30 196617 open;#P toggle 261 117 15 0;#N sfplay~  1 120960 0 ;#P newobj 261 140 44 196617 sfplay~;#P newex 14 305 196 196617 jit.slide @slide_up 100 @slide_down 100;#P toggle 14 40 15 0;#P newex 14 63 51 196617 qmetro 5;#P newex 37 122 61 196617 delay 1000;#P newex 37 91 56 196617 qlim 5000;#P message 196 123 34 196617 reset;#P newex 238 160 67 196617 record~ raw;#P user ezdac~ 239 376 283 409 0;#P user gain~ 239 284 70 49 158 0 1.071519 7.94321 10.;#P newex 239 216 58 196617 phasor~ 1.;#P newex 239 240 111 196617 wave~ stewed 0 1000;#P user jit.pwindow 28 209 129 35 0 1 0 0 1 0;#P newex 14 192 142 196617 jit.matrix 1 float32 44100 1;#P message 37 142 38 196617 output;#P newex 14 373 120 196617 jit.buffer~ stewed 1000;#P newex 37 160 199 196617 jit.buffer~ raw 1000 @outputlength 1000;#P comment 508 157 151 196617 Draw your favorite waveshape!;#P window linecount 7;#P comment 246 30 84 196617 This half takes a 1 second sample every 5 seconds \, cross-fading between the consecutive samples;#P window linecount 1;#P comment 98 88 100 196617 set sampling interval;#P window setfont "Sans Serif" 24.;#P comment 664 36 157 196632 JIT.BUFFER~;#P connect 18 0 17 0;#P connect 17 0 7 0;#P connect 4 0 7 0;#P connect 7 0 19 0;#P fasten 24 0 19 0 50 300 19 300;#P connect 19 0 5 0;#P connect 7 0 8 0;#P connect 19 0 26 0;#P fasten 17 0 15 0 19 83 42 83;#P connect 15 0 16 0;#P connect 16 0 6 0;#P connect 6 0 4 0;#P connect 25 0 24 0;#P connect 36 0 15 1;#P fasten 15 0 14 0 42 118 201 118;#P connect 20 0 13 0;#P fasten 14 0 13 0 201 141 243 141;#P fasten 18 0 13 0 19 59 243 59;#P connect 23 0 10 0;#P connect 10 0 9 0;#P connect 9 0 11 0;#P fasten 32 0 12 0 584 367 244 367;#P connect 11 0 12 0;#P connect 22 0 20 0;#P connect 21 0 20 0;#P fasten 11 0 12 1 244 361 278 361;#P fasten 32 0 12 1 584 367 278 367;#P connect 27 0 28 0;#P connect 28 0 29 0;#P fasten 38 0 29 0 665 181 438 181;#P connect 29 0 30 0;#P connect 34 0 33 0;#P connect 33 0 31 0;#P connect 31 0 32 0;#P pop;