<jittershader name="lumasker">	<description>	luminance threshold alpha generation	</description>	<param name="lum" type="vec2" default="0. 1.">		<description>luminance low hi thresholds</description>	</param>
	<param name="fade" type="vec2" default="0. 0." />	<param name="lumcoeff" type="vec4" default="0.299 .587 0.114 0.">	<description>Luminance coefficients (RGBA)</description>	</param>		<param name="tex0" type="int" default="0" />	<language name="glsl" version="1.0">		<bind param="lum" program="fp" />
		<bind param="fade" program="fp" />		<bind param="lumcoeff" program="fp" />		<bind param="tex0" program="fp" />			<program name="vp" type="vertex" source="sh.passthru.xform.vp.glsl" />		<program name="fp" type="fragment"><![CDATA[//setup for single texturevarying vec2 texcoord0;uniform sampler2DRect tex0;//luma thresholduniform vec2 lum;
uniform vec2 fade;uniform vec4 lumcoeff;void main(){   	vec4 a = texture2DRect(tex0, texcoord0);	vec3 b = vec3 (a);	// calculate our luminance	float luminance = dot(a,lumcoeff);	float clo = smoothstep(lum.x,lum.x+fade.x,luminance); 	float chi = 1.-smoothstep(lum.y-fade.y,lum.y,luminance);	float amask = float (clo * chi);	// output texture with transparency 	gl_FragColor = vec4(b,amask);}]]>		</program>	</language></jittershader>